/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useState } from 'react';
import { useGLTF } from '@react-three/drei/useGLTF'
import { Html } from 'drei';

import { useSpring } from '@react-spring/core';
import { a } from '@react-spring/three';

export default function FrameDraco(props, index) {

  const [expand, setExpand] = useState(false);
  const radius = window.innerHeight / 160
  const y = radius * Math.sin(2 * Math.PI * (1 / 3))
  const x = radius * Math.cos(2 * Math.PI * (1 / 3))
  const s = 2
  const scaleUp = s * window.innerHeight / 640
  const scaleDown = s * window.innerHeight / 640

  const animatedProps = useSpring({
    hovered: expand ? [scaleUp, scaleUp, scaleUp] : [scaleUp, scaleUp, scaleUp],
  });

  const group = useRef();
  const { nodes, materials } = useGLTF('/frame.glb')

  return (
    <a.group 
      ref={group} 
      {...props}
      position={[`${x}`, -0.5, `${y}`]}
      rotation={[1.67, 0.2, 0.1]}
      scale={animatedProps.hovered}
      onPointerOver={() => setExpand(true)}
      onPointerOut={() => setExpand(false)}
    >
      <mesh
        material={materials['initialShadingGroup.001']}
        geometry={nodes.g_PictureFrame001.geometry}
        onPointerUp={() => window.appHistory.push("/gallery")}
      />
      <Html scaleFactor={5} position={[-0.2, 0.2, 1.2]}>
        <h1 className="threeD__label">Gallery</h1>
      </Html>
    </a.group>
  )
}

useGLTF.preload('/frame.glb')
